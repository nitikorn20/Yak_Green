
services:
  # ✅ MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
  # ✅ Mongo Express (Web UI)
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_URL: "mongodb://mongodb:27017/${MONGO_INITDB_DATABASE}?authSource=admin"
      ME_CONFIG_MONGODB_AUTH_DATABASE: "admin"
      ME_CONFIG_BASICAUTH: "true"
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy

  # ✅ MQTT Broker (Mosquitto)
  mqtt-broker:
    image: eclipse-mosquitto:latest
    container_name: mqtt-broker
    restart: always
    ports:
      - "1883:1883" # MQTT TCP
      - "9001:9001" # MQTT WebSocket (WS)
    volumes:
      - ./mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf

  # ✅ API Service (Node.js)
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
      mqtt-broker:
        condition: service_started
    restart: always
    command: ["node", "server.js"] # ✅ รัน API อย่างเดียว

    # ✅ MQTT Service (Node.js)
  mqtt-service:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      mqtt-broker:
        condition: service_started
    restart: always
    hostname: mqtt-service  # ✅ ป้องกัน client ID ซ้ำ
    command: ["node", "mqttService.js"]

  # ✅ Vue.js Web App
  vue_app:
    build:
      context: ./vue_app
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - api
    restart: "no"  # ✅ สร้าง Web App เสร็จแล้วหยุดทันที เพราะให้ Nginx ทำหน้าที่แทน
  # ✅ Nginx Reverse Proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"  # ✅ เปลี่ยนจาก "80:80" เป็น "8080:80" เพื่อให้เข้าได้ผ่าน http://localhost:8080
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./vue_app/dist:/usr/share/nginx/html
    depends_on:
      - api
volumes:
  mongodb_data:
