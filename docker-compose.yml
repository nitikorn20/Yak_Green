version: "3.8" # ✅ เพิ่ม version ของ Docker Compose เพื่อรองรับฟีเจอร์ใหม่

services:
  # ✅ MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ✅ MQTT Broker (Mosquitto)
  mqtt-broker:
    image: eclipse-mosquitto:latest
    container_name: mqtt-broker
    restart: always
    ports:
      - "1883:1883" # MQTT TCP
      - "9001:9001" # MQTT WebSocket (WS)
      - "8883:8883" # ✅ WebSocket Secure (WSS)
    volumes:
      - ./mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - /etc/letsencrypt:/etc/letsencrypt # ✅ Mount SSL Certificates

  # ✅ API Service (Node.js)
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    expose:
      - "5000" # ✅ ใช้ `expose` แทน `ports` เพื่อไม่เปิด API สู่ภายนอก
    depends_on:
      mongodb:
        condition: service_healthy
      mqtt-broker:
        condition: service_started
    restart: always
    environment:
      - NODE_ENV=production # ✅ ตั้งค่า Production Mode
    command: ["node", "server.js"] # ✅ รัน API อย่างเดียว

  # ✅ MQTT Service (Node.js)
  mqtt-service:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      mqtt-broker:
        condition: service_started
    restart: always
    hostname: mqtt-service # ✅ ป้องกัน client ID ซ้ำ
    command: ["node", "mqttService.js"]

  # ✅ Vue.js Web App
  vue_app:
    build:
      context: ./vue_app
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      - api
    restart: "no" # ✅ สร้าง Web App เสร็จแล้วหยุดทันที เพราะให้ Nginx ทำหน้าที่แทน

  # ✅ Nginx Reverse Proxy
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80" # ✅ ใช้เป็น Reverse Proxy
      - "443:443" # ✅ ใช้สำหรับ SSL
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./vue_app/dist:/usr/share/nginx/html
      - /etc/letsencrypt:/etc/letsencrypt # ✅ Mount SSL Certificates
    depends_on:
      - api

volumes:
  mongodb_data:
  mosquitto_certs:
    driver: local
